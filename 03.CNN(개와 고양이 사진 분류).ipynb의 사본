{"cells":[{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22556,"status":"ok","timestamp":1725519165508,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"lvnUQdZhXPN7","outputId":"64604f33-0777-4287-8518-9dab9c4147e9"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":538,"status":"ok","timestamp":1725519166042,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"hKsqUZgsaGF7","outputId":"fb26694c-7199-4743-bfc0-037bc5aebd18"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/Colab Notebooks/인사교_머신러닝/DL (딥러닝)\n"]}],"source":["%cd /content/drive/MyDrive/Colab Notebooks/인사교_머신러닝/DL (딥러닝)"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":589,"status":"ok","timestamp":1725519166629,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"GCjpylL0a0ZL","outputId":"96f0d461-c406-4c5b-eb5f-246511322460"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/Colab Notebooks/인사교_머신러닝/DL (딥러닝)\n"]}],"source":["!pwd"]},{"cell_type":"code","execution_count":8,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1725519166631,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"018-sLHnaIyJ"},"outputs":[],"source":["# 데이터 경로 지정\n","train_dir = \"./data/dogs_vs_cats_small/train\"\n","val_dir = \"./data/dogs_vs_cats_small/validation\"\n","test_dir = \"./data/dogs_vs_cats_small/test\""]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1725519166631,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"MCqveFcka8eQ"},"outputs":[],"source":["# 이미지 정규화(0~255 -\u003e 0~1), 라벨링, 입력값 크기도 동일하게 맞추어야 함(150, 150)"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1725519166631,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"7AQAsYf1bf49"},"outputs":[],"source":["from tensorflow.keras.preprocessing.image import ImageDataGenerator"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1725519166632,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"WwYxyKjubnYI"},"outputs":[],"source":["# 픽셀값의 범위 조정하는 기능 생성\n","generator = ImageDataGenerator(rescale = 1./255) # -\u003e 0~1 사이의 값으로 스케일링"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1632,"status":"ok","timestamp":1725519338928,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"yxIl7fS2b65B","outputId":"760300a6-28e4-44fc-89af-8c3b1a73989c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 2000 images belonging to 2 classes.\n","Found 1000 images belonging to 2 classes.\n","Found 22 images belonging to 2 classes.\n"]}],"source":["train_generator = generator.flow_from_directory( # 지정된 디렉토리에서 이미지를 불러오고, 배치 단위로 데이터를 생성\n","    directory = train_dir, # 경로 지정\n","    target_size = (150, 150), # 이미지들의 크기 조정\n","    class_mode = \"binary\", # 이진분류 // categorical(다중분류)\n","    batch_size = 50 # 배치 단위 지정(한번에 변환할 이미지 개수)\n",")\n","\n","val_generator = generator.flow_from_directory( # 지정된 디렉토리에서 이미지를 불러오고, 배치 단위로 데이터를 생성\n","    directory = val_dir, # 경로 지정\n","    target_size = (150, 150), # 이미지들의 크기 조정\n","    class_mode = \"binary\", # 이진분류 // categorical(다중분류)\n","    batch_size = 50 # 배치 단위 지정(한번에 변환할 이미지 개수)\n",")\n","\n","test_generator = generator.flow_from_directory( # 지정된 디렉토리에서 이미지를 불러오고, 배치 단위로 데이터를 생성\n","    directory = test_dir, # 경로 지정\n","    target_size = (150, 150), # 이미지들의 크기 조정\n","    class_mode = \"binary\", # 이진분류 // categorical(다중분류)\n","    batch_size = 50 # 배치 단위 지정(한번에 변환할 이미지 개수)\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":429,"status":"ok","timestamp":1725513150009,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"qL0_As0fkYD-","outputId":"4d533edc-0d4b-4a29-eb48-2fbdecb392ae"},"outputs":[{"data":{"text/plain":["{'cats': 0, 'dogs': 1}"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["train_generator.class_indices # 라벨링 확인\n","# 디렉토리별로 라벨링을 진행하는데, 기본값이 오름차순"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6YnK5xN4kc_m"},"outputs":[],"source":["# CNN 모델 -\u003e 특징추출부 (Conv, Pool) + 분류부(Dense)\n","\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Input, Flatten, Conv2D, MaxPool2D\n","\n","# Input : InputLayer 보다는 좀 더 상위수준의 API\n","# Conv2D : 2차원의 컨볼루션 층, MaxPool2D : 2차원 맥스풀링 층\n","\n","# 뼈대\n","model = Sequential()\n","\n","# 입력\n","model.add(Input(shape = (150, 150, 3))) # 150*150, 3개의 색상 채널\n","\n","##### 특징 추출부 시작 #####\n","model.add(Conv2D(\n","    filters = 32, # 찾을 특징의 개수\n","    kernel_size = (3, 3), # 커널(필터)의 크기\n","    padding = 'same', # 이미지 크기를 동일하게 하기 위해서, 가장 자리에 0을 채워둠\n","    # 이미지 자체가 크거나, 특징이 많을 때 -\u003e valid\n","    # 이미지 자체가 작거나, 가장자리에 중요한 정보가 있다고 판단 되는 경우 -\u003e same\n","    activation = 'relu',\n","    strides = (2, 2) # 보폭, 양 옆으로 2픽셀 씩 + 위 아래로 2픽셀 씩\n","))\n","\n","\n","model.add(MaxPool2D(\n","    pool_size = (2, 2) # 풀링 윈도우 설정(최대값을 뽑기 위한 영역 크기)\n","    # 최댓값 -\u003e 가장 도드라지는 픽셀 1개, 크기는 보통 2*2\n","))\n","\n","model.add(Conv2D(\n","    filters = 16, # 정답은 없음!\n","    kernel_size = (3,3),\n","    padding = \"same\",\n","    activation = \"relu\"\n","))\n","model.add(MaxPool2D(\n","    pool_size = (2,2)\n","))\n","##### 특징 추출부 끝 #####\n","model.add(Flatten()) # 다차원의 층을 1차원으로 변환\n","\n","##### 분류부 시작 #####\n","model.add(Dense(units = 64, activation = \"relu\"))\n","model.add(Dense(units = 32, activation = \"relu\"))\n","model.add(Dense(units = 16, activation = \"relu\"))\n","\n","# 출력층\n","model.add(Dense(units = 1, activation = \"sigmoid\"))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":417},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1725513154288,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"VfRd2n6Ew6j2","outputId":"fbaaebee-1c59-4cfa-cd8b-ce4e805351a3"},"outputs":[{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003eModel: \"sequential\"\u003c/span\u003e\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1mModel: \"sequential\"\u001b[0m\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u003cspan style=\"font-weight: bold\"\u003e Layer (type)                         \u003c/span\u003e┃\u003cspan style=\"font-weight: bold\"\u003e Output Shape                \u003c/span\u003e┃\u003cspan style=\"font-weight: bold\"\u003e         Param # \u003c/span\u003e┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ conv2d (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                      │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e32\u003c/span\u003e)          │             \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e896\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ max_pooling2d (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)         │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e32\u003c/span\u003e)          │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ conv2d_1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                    │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e16\u003c/span\u003e)          │           \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e4,624\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ max_pooling2d_1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)       │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e16\u003c/span\u003e)          │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ flatten (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eFlatten\u003c/span\u003e)                    │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e5184\u003c/span\u003e)                │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eDense\u003c/span\u003e)                        │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e64\u003c/span\u003e)                  │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e331,840\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eDense\u003c/span\u003e)                      │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e32\u003c/span\u003e)                  │           \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,080\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eDense\u003c/span\u003e)                      │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e16\u003c/span\u003e)                  │             \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e528\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_3 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eDense\u003c/span\u003e)                      │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e1\u003c/span\u003e)                   │              \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e17\u003c/span\u003e │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","\u003c/pre\u003e\n"],"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ conv2d (\u001b[38;5;33mConv2D\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m32\u001b[0m)          │             \u001b[38;5;34m896\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ max_pooling2d (\u001b[38;5;33mMaxPooling2D\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m32\u001b[0m)          │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ conv2d_1 (\u001b[38;5;33mConv2D\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m16\u001b[0m)          │           \u001b[38;5;34m4,624\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ max_pooling2d_1 (\u001b[38;5;33mMaxPooling2D\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m16\u001b[0m)          │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ flatten (\u001b[38;5;33mFlatten\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5184\u001b[0m)                │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)                  │         \u001b[38;5;34m331,840\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m)                  │           \u001b[38;5;34m2,080\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m16\u001b[0m)                  │             \u001b[38;5;34m528\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_3 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)                   │              \u001b[38;5;34m17\u001b[0m │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Total params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e339,985\u003c/span\u003e (1.30 MB)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m339,985\u001b[0m (1.30 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Trainable params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e339,985\u003c/span\u003e (1.30 MB)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m339,985\u001b[0m (1.30 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Non-trainable params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e (0.00 B)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"]},"metadata":{},"output_type":"display_data"}],"source":["# 딥러닝 설계 확인\n","model.summary()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Daz2W1DOxPmb"},"outputs":[],"source":["# 학습 방법 설정\n","model.compile(\n","    loss = \"binary_crossentropy\",\n","    optimizer = \"adam\",\n","    metrics = [\"accuracy\"]\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":916845,"status":"ok","timestamp":1725349574220,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"DqtgcrM2yQ89","outputId":"40cc05ac-a8ee-4fa7-de73-15ad68936b7d"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/20\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m548s\u001b[0m 12s/step - accuracy: 0.5030 - loss: 0.7090 - val_accuracy: 0.5000 - val_loss: 0.6933\n","Epoch 2/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 292ms/step - accuracy: 0.5729 - loss: 0.6793 - val_accuracy: 0.5670 - val_loss: 0.6523\n","Epoch 3/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 290ms/step - accuracy: 0.6385 - loss: 0.6239 - val_accuracy: 0.7020 - val_loss: 0.5894\n","Epoch 4/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 291ms/step - accuracy: 0.7233 - loss: 0.5503 - val_accuracy: 0.6600 - val_loss: 0.6228\n","Epoch 5/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 280ms/step - accuracy: 0.7768 - loss: 0.4822 - val_accuracy: 0.7210 - val_loss: 0.5774\n","Epoch 6/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 295ms/step - accuracy: 0.8242 - loss: 0.4069 - val_accuracy: 0.7120 - val_loss: 0.5862\n","Epoch 7/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 321ms/step - accuracy: 0.8577 - loss: 0.3518 - val_accuracy: 0.7200 - val_loss: 0.6254\n","Epoch 8/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m15s\u001b[0m 339ms/step - accuracy: 0.8819 - loss: 0.2882 - val_accuracy: 0.7100 - val_loss: 0.6469\n","Epoch 9/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m15s\u001b[0m 329ms/step - accuracy: 0.9076 - loss: 0.2386 - val_accuracy: 0.7310 - val_loss: 0.7113\n","Epoch 10/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 311ms/step - accuracy: 0.9031 - loss: 0.2259 - val_accuracy: 0.7000 - val_loss: 0.8031\n","Epoch 11/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 313ms/step - accuracy: 0.9427 - loss: 0.1561 - val_accuracy: 0.7060 - val_loss: 0.9010\n","Epoch 12/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 294ms/step - accuracy: 0.9695 - loss: 0.0974 - val_accuracy: 0.7080 - val_loss: 0.9799\n","Epoch 13/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 441ms/step - accuracy: 0.9816 - loss: 0.0779 - val_accuracy: 0.7140 - val_loss: 1.0117\n","Epoch 14/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 275ms/step - accuracy: 0.9800 - loss: 0.0653 - val_accuracy: 0.6900 - val_loss: 1.2131\n","Epoch 15/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 301ms/step - accuracy: 0.9748 - loss: 0.0863 - val_accuracy: 0.7080 - val_loss: 1.2771\n","Epoch 16/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 295ms/step - accuracy: 0.9871 - loss: 0.0478 - val_accuracy: 0.6990 - val_loss: 1.2694\n","Epoch 17/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 275ms/step - accuracy: 0.9932 - loss: 0.0270 - val_accuracy: 0.7110 - val_loss: 1.3403\n","Epoch 18/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 275ms/step - accuracy: 0.9959 - loss: 0.0179 - val_accuracy: 0.7130 - val_loss: 1.4134\n","Epoch 19/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 293ms/step - accuracy: 0.9967 - loss: 0.0162 - val_accuracy: 0.7140 - val_loss: 1.4840\n","Epoch 20/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 342ms/step - accuracy: 0.9949 - loss: 0.0188 - val_accuracy: 0.6970 - val_loss: 1.3552\n"]}],"source":["# 학습\n","model_history = model.fit(\n","    train_generator,\n","    epochs = 20,\n","    validation_data = val_generator\n",")\n","\n","# accuracy: 0.9949 - loss: 0.0188 - val_accuracy: 0.6970 - val_loss: 1.3552 -\u003e 과대적합\n","# 모델 설계를 최소화 하였기 때문\n","# 기본적으로는 Conv/Pool set가 4~5 set으로 구성됨, filters도 100개 이상의 옵션으로 구성\n","\n","# 데이터 수를 증가시킴, 모델 깊이를 증가시킴, 설계를 변경, 데이터 증강(변형)\n","# 규제, dropout, 조기 학습 중단"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":4835,"status":"ok","timestamp":1725519183788,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"_g7s4c1TyxCz"},"outputs":[],"source":["# 예측해보기\n","import cv2 # opencv\n","path = \"./data/dogs_vs_cats_small/validation/dogs/dog.1006.jpg\"\n","img = cv2.imread(path, cv2.IMREAD_COLOR) # BGR\n","img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) # BGR에서 RGB로 변경\n","img = img.astype(float) / 255 # 0 ~ 1 사이의 값으로 스케일링\n","img = cv2.resize(img, (150, 150)) # 크기 변경\n","img = img.reshape((1, 150, 150, 3)) # 차원 맞춰주기"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2351,"status":"ok","timestamp":1725513165994,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"jUFLfoKV2lfX","outputId":"46322c9f-f3ba-4a2d-af11-b3344997b4ae"},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 2s/step\n"]},{"data":{"text/plain":["array([[0.53080136]], dtype=float32)"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["model.predict(img) # 0.5보다 큰 경우 1 -\u003e 1이 dogs"]},{"cell_type":"markdown","metadata":{"id":"Y8ru2uD-eMkT"},"source":["### CNN (합성곱 신경망)\n","- 이미지, 영상에 특화\n","- 추출 된 특징을 가지고 연산을 수행하기 때문에, 픽셀의 위치가 다르더라도 패턴이 다르다고 인식되지 않음\n","\n","### 구조\n","1. 특성 추출부\n","  - Conv : 커널(필터)을 활용해서 중요한 특성들을 숫자값(Featuremap)으로 정보를 담는 역할\n","    - Padding : 이미지의 가장자리 부분에 특정 값 (기본값은 0)으로 채우는 작업\n","    - 축소 샘플링 : 이미지의 크기가 너무 크거나, 정보가 너무 많을 때 가치있는 정보만 다음 단계로 넘겨볼 수 있는 기법\n","    - Stride : 보폭(커널을 이동시킬 때마다 픽셀 단위로 얼만큼 움직일지 나타내는 값)\n","  - Pool : 중요한 특성들을 걸러내는 역할 (중요하지 않는 특성들을 제외하는 역할)\n","    - Max : 주로 많이 사용, 풀링 윈도우 내에서 최대값을 반환\n","    - Avg : 풀링 윈도우 내에서 평균값을 반환 -\u003e 가장 도드라진 특성값(최대값)이 희석될 가능성이 있음!!!\n","    \n","2. 분류부\n","    - MLP(다층 신경망) 구조"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9tWd7Mfdhvj4"},"outputs":[],"source":["# CNN 모델 \u003e\u003e 특징추출부(Conv, Pool) + 분류부(Dense)\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Input, Flatten, Conv2D, MaxPool2D, Dropout\n","\n","\n","# 뼈대\n","model2 = Sequential()\n","\n","\n","#입력\n","model2.add(Input(shape = (150,150, 3)))\n","\n","\n","#### 특징 추출부 시작 ####\n","model2.add(Conv2D(\n","    filters = 32,\n","    kernel_size = (3,3),\n","    padding = 'same',\n","\n","\n","    activation = 'relu',\n","    strides = (2,2)\n","))\n","\n","# Conv2D 이후 Dropout을 적용... 할 수는 있음 But, 성능이 많이 떨어짐. \u003e\u003e 정보 손실 위험 有\n","\n","model2.add(MaxPool2D(\n","    pool_size = (2, 2)\n","))\n","\n","## drop out 활용\n","model2.add(Dropout(0.3))\n","# 풀링층에서 나온 데이터를 처리할 때 무작위로 30%를 0으로 만든 후, 다음 층으로 넘기겠음.\n","\n","\n","model2.add(Conv2D(\n","    filters = 16, # 정답은 없음!\n","    kernel_size = (3,3),\n","    padding = \"same\",\n","    activation = \"relu\"\n","))\n","\n","\n","model2.add(MaxPool2D(\n","    pool_size = (2,2)\n","))\n","\n","#### 특징 추출부 끝 ####\n","\n","\n","model2.add(Flatten())\n","\n","##### 분류부 시작 #####\n","\n","model2.add(Dense(units = 64, activation=\"relu\"))\n","\n","## drop out 또 활용\n","model2.add(Dropout(0.3))\n","\n","model2.add(Dense(units = 32, activation=\"relu\"))\n","model2.add(Dense(units = 16, activation=\"relu\"))\n","\n","# 출력층\n","\n","model2.add(Dense(units = 1, activation = \"sigmoid\"))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gWJ5o4Fymc3p"},"outputs":[],"source":["# 학습 방법 설정\n","model2.compile(\n","    loss = \"binary_crossentropy\",\n","    optimizer = \"adam\",\n","    metrics = [\"accuracy\"]\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2398356,"status":"ok","timestamp":1725431717716,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"RtIiBIxymei_","outputId":"c21153ca-86ce-445d-88ff-df2f53dda30e"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/20\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1985s\u001b[0m 44s/step - accuracy: 0.5101 - loss: 0.7018 - val_accuracy: 0.5430 - val_loss: 0.6913\n","Epoch 2/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 304ms/step - accuracy: 0.5192 - loss: 0.6899 - val_accuracy: 0.5380 - val_loss: 0.6907\n","Epoch 3/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 311ms/step - accuracy: 0.5316 - loss: 0.6848 - val_accuracy: 0.5790 - val_loss: 0.6804\n","Epoch 4/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 325ms/step - accuracy: 0.5709 - loss: 0.6681 - val_accuracy: 0.6100 - val_loss: 0.6541\n","Epoch 5/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 319ms/step - accuracy: 0.6296 - loss: 0.6449 - val_accuracy: 0.6690 - val_loss: 0.6291\n","Epoch 6/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 312ms/step - accuracy: 0.6547 - loss: 0.6129 - val_accuracy: 0.6450 - val_loss: 0.6280\n","Epoch 7/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 456ms/step - accuracy: 0.6942 - loss: 0.5879 - val_accuracy: 0.6880 - val_loss: 0.5991\n","Epoch 8/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 302ms/step - accuracy: 0.7092 - loss: 0.5476 - val_accuracy: 0.6910 - val_loss: 0.5726\n","Epoch 9/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 272ms/step - accuracy: 0.7617 - loss: 0.5040 - val_accuracy: 0.6860 - val_loss: 0.5947\n","Epoch 10/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 286ms/step - accuracy: 0.7698 - loss: 0.4963 - val_accuracy: 0.6960 - val_loss: 0.5739\n","Epoch 11/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 290ms/step - accuracy: 0.7941 - loss: 0.4484 - val_accuracy: 0.7040 - val_loss: 0.5776\n","Epoch 12/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 297ms/step - accuracy: 0.8134 - loss: 0.4263 - val_accuracy: 0.6740 - val_loss: 0.5912\n","Epoch 13/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 328ms/step - accuracy: 0.8173 - loss: 0.4087 - val_accuracy: 0.7020 - val_loss: 0.6263\n","Epoch 14/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 287ms/step - accuracy: 0.8515 - loss: 0.3595 - val_accuracy: 0.6960 - val_loss: 0.6301\n","Epoch 15/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 290ms/step - accuracy: 0.8578 - loss: 0.3305 - val_accuracy: 0.6840 - val_loss: 0.6740\n","Epoch 16/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 287ms/step - accuracy: 0.8870 - loss: 0.2762 - val_accuracy: 0.6980 - val_loss: 0.7538\n","Epoch 17/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 296ms/step - accuracy: 0.8893 - loss: 0.2708 - val_accuracy: 0.7010 - val_loss: 0.7082\n","Epoch 18/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 294ms/step - accuracy: 0.9302 - loss: 0.1953 - val_accuracy: 0.7010 - val_loss: 0.7710\n","Epoch 19/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 295ms/step - accuracy: 0.9279 - loss: 0.1922 - val_accuracy: 0.6910 - val_loss: 0.8354\n","Epoch 20/20\n","\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 301ms/step - accuracy: 0.9230 - loss: 0.1868 - val_accuracy: 0.6840 - val_loss: 0.9378\n"]}],"source":["# 학습\n","model2_history = model2.fit(\n","    train_generator,\n","    epochs = 20,\n","    validation_data = val_generator\n",")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":242},"executionInfo":{"elapsed":408,"status":"error","timestamp":1725513173982,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"GGdC7WoemgD6","outputId":"aae28e67-5d65-40f2-b531-39072ceb25f2"},"outputs":[{"ename":"NameError","evalue":"name 'model2_history' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-18-c063e2953761\u003e\u001b[0m in \u001b[0;36m\u003ccell line: 6\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m15\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 6\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel2_history\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"accuracy\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"train_acc\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel2_history\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"val_accuracy\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"val_acc\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlegend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'model2_history' is not defined"]},{"data":{"text/plain":["\u003cFigure size 1500x500 with 0 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# 첫번째 모델(드롭아웃 적용 시키기 전) : accuracy: 0.9949 - loss: 0.0188 - val_accuracy: 0.6970 - val_loss: 1.3552\n","# 두번째 모델(드롭아웃 적용 이후) : accuracy: 0.9230 - loss: 0.1868 - val_accuracy: 0.6840 - val_loss: 0.9378\n","import matplotlib.pyplot as plt\n","\n","plt.figure(figsize = (15, 5))\n","plt.plot(model2_history.history[\"accuracy\"], label = \"train_acc\")\n","plt.plot(model2_history.history[\"val_accuracy\"], label = \"val_acc\")\n","plt.legend()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"I2WqDAvFudBa"},"source":["#### 데이터 증강\n","- 드롭아웃만으로는 과대적합을 피하지는 못 했음\n","- 데이터 증강 : 이미지 변형(회전, 이동, 확대, 축소 등)을 통해 데이터를 변형시키는 방법\n","  - 학습할 때만 적용 !!\n","  - 과대적합이 일어나는 원인 중에 하나가 train set이 부족하거나 편향적일 때 발생\n","  - train set을 다양하게 변형해서, 마치 새로운 train 데이터처럼 사용하는 기법\n","  - 훈련데이터 수가 늘어난 효과(실제로는 아님)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PCSSYBdBuVE3"},"outputs":[],"source":["# 데이터 증강 기법 적용\n","aug_generator = ImageDataGenerator(\n","    rescale = 1. /255, # 0~! 사이의 픽셀값 조정(스케일링)\n","    rotation_range = 20, # -20~ 20도 사이에서 무작위로 회전\n","    width_shift_range = 0.1, # 10%, 전체 너비의 10%만큼 좌우로 무작위로 이동\n","    height_shift_range = 0.1, # 10%, 전체 높이의 10%만큼 상하로 무작위로 이동\n","    shear_range = 0.1, # 시계반대방향으로 지정된 각도(0,1)만큼 변형\n","    zoom_range = 0.1, # 0.9 ~ 1.1배 사이로 무작위로 확대하거나 축소\n","    horizontal_flip = True, #수평방향으로 뒤집을지 여부\n","    fill_mode = \"nearest\" # 가까운 값으로 채우겠다 !\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1725513184758,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"yge4FF1kxyjz","outputId":"c0ed0776-1930-435d-ecfd-cf4f0fa465e8"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 2000 images belonging to 2 classes.\n"]}],"source":["train_aug_generator = aug_generator.flow_from_directory(\n","    train_dir,\n","    target_size = (150, 150),\n","    batch_size = 25,\n","    class_mode = \"binary\"\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qgJolflkybEy"},"outputs":[],"source":["# CNN 모델 \u003e\u003e 특징추출부(Conv, Pool) + 분류부(Dense)\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Input, Flatten, Conv2D, MaxPool2D, Dropout\n","\n","\n","# 뼈대\n","model3 = Sequential()\n","\n","\n","#입력\n","model3.add(Input(shape = (150,150, 3)))\n","\n","\n","#### 특징 추출부 시작 ####\n","model3.add(Conv2D(\n","    filters = 32,\n","    kernel_size = (3,3),\n","    padding = 'same',\n","\n","\n","    activation = 'relu',\n","    strides = (2,2)\n","))\n","\n","# Conv2D 이후 Dropout을 적용... 할 수는 있음 But, 성능이 많이 떨어짐. \u003e\u003e 정보 손실 위험 有\n","\n","model3.add(MaxPool2D(\n","    pool_size = (2, 2)\n","))\n","\n","## drop out 활용\n","model3.add(Dropout(0.3))\n","# 풀링층에서 나온 데이터를 처리할 때 무작위로 30%를 0으로 만든 후, 다음 층으로 넘기겠음.\n","\n","\n","model3.add(Conv2D(\n","    filters = 16, # 정답은 없음!\n","    kernel_size = (3,3),\n","    padding = \"same\",\n","    activation = \"relu\"\n","))\n","\n","\n","model3.add(MaxPool2D(\n","    pool_size = (2,2)\n","))\n","\n","#### 특징 추출부 끝 ####\n","\n","\n","model3.add(Flatten())\n","\n","##### 분류부 시작 #####\n","\n","model3.add(Dense(units = 64, activation=\"relu\"))\n","\n","## drop out 또 활용\n","model3.add(Dropout(0.3))\n","\n","model3.add(Dense(units = 32, activation=\"relu\"))\n","model3.add(Dense(units = 16, activation=\"relu\"))\n","\n","# 출력층\n","\n","model3.add(Dense(units = 1, activation = \"sigmoid\"))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ktEhvEuby-Ba"},"outputs":[],"source":["# 학습 방법 설정\n","model3.compile(\n","    loss = \"binary_crossentropy\",\n","    optimizer = \"adam\",\n","    metrics = [\"accuracy\"]\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"executionInfo":{"elapsed":1313955,"status":"ok","timestamp":1725434080532,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"S0C4I0MszCKw","outputId":"b7a7f4e0-1efe-416c-9027-d45ae9423f2e"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/40\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 285ms/step - accuracy: 0.5051 - loss: 0.6990 - val_accuracy: 0.5000 - val_loss: 0.6932\n","Epoch 2/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 304ms/step - accuracy: 0.5136 - loss: 0.6934 - val_accuracy: 0.5010 - val_loss: 0.6931\n","Epoch 3/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 270ms/step - accuracy: 0.4881 - loss: 0.6934 - val_accuracy: 0.5140 - val_loss: 0.6922\n","Epoch 4/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 274ms/step - accuracy: 0.5367 - loss: 0.6921 - val_accuracy: 0.5010 - val_loss: 0.6895\n","Epoch 5/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 275ms/step - accuracy: 0.5254 - loss: 0.6930 - val_accuracy: 0.5090 - val_loss: 0.7216\n","Epoch 6/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 265ms/step - accuracy: 0.5437 - loss: 0.6960 - val_accuracy: 0.5780 - val_loss: 0.6857\n","Epoch 7/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m24s\u001b[0m 277ms/step - accuracy: 0.5520 - loss: 0.6835 - val_accuracy: 0.5260 - val_loss: 0.6896\n","Epoch 8/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 274ms/step - accuracy: 0.5425 - loss: 0.6851 - val_accuracy: 0.5980 - val_loss: 0.6726\n","Epoch 9/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 284ms/step - accuracy: 0.6074 - loss: 0.6729 - val_accuracy: 0.5260 - val_loss: 0.6872\n","Epoch 10/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m39s\u001b[0m 270ms/step - accuracy: 0.5861 - loss: 0.6708 - val_accuracy: 0.6210 - val_loss: 0.6490\n","Epoch 11/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m24s\u001b[0m 274ms/step - accuracy: 0.6290 - loss: 0.6464 - val_accuracy: 0.6130 - val_loss: 0.6525\n","Epoch 12/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 282ms/step - accuracy: 0.6324 - loss: 0.6515 - val_accuracy: 0.6490 - val_loss: 0.6353\n","Epoch 13/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m39s\u001b[0m 267ms/step - accuracy: 0.6429 - loss: 0.6443 - val_accuracy: 0.6390 - val_loss: 0.6393\n","Epoch 14/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 280ms/step - accuracy: 0.6470 - loss: 0.6261 - val_accuracy: 0.6690 - val_loss: 0.6181\n","Epoch 15/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m40s\u001b[0m 271ms/step - accuracy: 0.6598 - loss: 0.6214 - val_accuracy: 0.6500 - val_loss: 0.6141\n","Epoch 16/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 295ms/step - accuracy: 0.6610 - loss: 0.6092 - val_accuracy: 0.6760 - val_loss: 0.5915\n","Epoch 17/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m39s\u001b[0m 268ms/step - accuracy: 0.6867 - loss: 0.5877 - val_accuracy: 0.6680 - val_loss: 0.6103\n","Epoch 18/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 280ms/step - accuracy: 0.6768 - loss: 0.6060 - val_accuracy: 0.7260 - val_loss: 0.5619\n","Epoch 19/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m39s\u001b[0m 259ms/step - accuracy: 0.6821 - loss: 0.5923 - val_accuracy: 0.7110 - val_loss: 0.5660\n","Epoch 20/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 274ms/step - accuracy: 0.6823 - loss: 0.5793 - val_accuracy: 0.7100 - val_loss: 0.5511\n","Epoch 21/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 273ms/step - accuracy: 0.7018 - loss: 0.5590 - val_accuracy: 0.7230 - val_loss: 0.5529\n","Epoch 22/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 271ms/step - accuracy: 0.7262 - loss: 0.5586 - val_accuracy: 0.6900 - val_loss: 0.5751\n","Epoch 23/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 263ms/step - accuracy: 0.6959 - loss: 0.5668 - val_accuracy: 0.7100 - val_loss: 0.5631\n","Epoch 24/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 301ms/step - accuracy: 0.6976 - loss: 0.5681 - val_accuracy: 0.7350 - val_loss: 0.5287\n","Epoch 25/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 269ms/step - accuracy: 0.7382 - loss: 0.5478 - val_accuracy: 0.7320 - val_loss: 0.5392\n","Epoch 26/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 279ms/step - accuracy: 0.7064 - loss: 0.5587 - val_accuracy: 0.7340 - val_loss: 0.5260\n","Epoch 27/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 260ms/step - accuracy: 0.7370 - loss: 0.5359 - val_accuracy: 0.6960 - val_loss: 0.5755\n","Epoch 28/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 273ms/step - accuracy: 0.7224 - loss: 0.5483 - val_accuracy: 0.7360 - val_loss: 0.5274\n","Epoch 29/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 260ms/step - accuracy: 0.7140 - loss: 0.5492 - val_accuracy: 0.7250 - val_loss: 0.5423\n","Epoch 30/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 264ms/step - accuracy: 0.7222 - loss: 0.5469 - val_accuracy: 0.7400 - val_loss: 0.5243\n","Epoch 31/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 260ms/step - accuracy: 0.7275 - loss: 0.5315 - val_accuracy: 0.7250 - val_loss: 0.5271\n","Epoch 32/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 274ms/step - accuracy: 0.7199 - loss: 0.5387 - val_accuracy: 0.7640 - val_loss: 0.5199\n","Epoch 33/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 294ms/step - accuracy: 0.7306 - loss: 0.5271 - val_accuracy: 0.7340 - val_loss: 0.5190\n","Epoch 34/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m39s\u001b[0m 275ms/step - accuracy: 0.7276 - loss: 0.5163 - val_accuracy: 0.7450 - val_loss: 0.5056\n","Epoch 35/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 271ms/step - accuracy: 0.7209 - loss: 0.5431 - val_accuracy: 0.7420 - val_loss: 0.5235\n","Epoch 36/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 274ms/step - accuracy: 0.7404 - loss: 0.5101 - val_accuracy: 0.7350 - val_loss: 0.5317\n","Epoch 37/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 278ms/step - accuracy: 0.7501 - loss: 0.5032 - val_accuracy: 0.7400 - val_loss: 0.5229\n","Epoch 38/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 276ms/step - accuracy: 0.7209 - loss: 0.5398 - val_accuracy: 0.7500 - val_loss: 0.4932\n","Epoch 39/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 276ms/step - accuracy: 0.7369 - loss: 0.5244 - val_accuracy: 0.7460 - val_loss: 0.5116\n","Epoch 40/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 292ms/step - accuracy: 0.7553 - loss: 0.5091 - val_accuracy: 0.7450 - val_loss: 0.5082\n"]}],"source":["# 학습\n","model_history2 = model3.fit(\n","    train_aug_generator, # 증강 제너레이터 적용!\n","    epochs = 40, # 증강( 변형) 이라서 더 많은 이미지들을 보여주기 위해 에포크 증가\n","    validation_data = val_generator\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":242},"executionInfo":{"elapsed":410,"status":"error","timestamp":1725513197136,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"ywGQ1BuX45kr","outputId":"6600cd98-f736-40f3-86ba-a6ed4c75619b"},"outputs":[{"ename":"NameError","evalue":"name 'model_history2' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-23-d52b556949be\u003e\u001b[0m in \u001b[0;36m\u003ccell line: 7\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m15\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 7\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel_history2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"accuracy\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"train_acc\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel_history2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"val_accuracy\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"val_acc\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlegend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'model_history2' is not defined"]},{"data":{"text/plain":["\u003cFigure size 1500x500 with 0 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# 첫번째 모델(드롭아웃 적용 시키기 전) : accuracy: 0.9949 - loss: 0.0188 - val_accuracy: 0.6970 - val_loss: 1.3552\n","# 두번째 모델(드롭아웃 적용 이후) : accuracy: 0.9230 - loss: 0.1868 - val_accuracy: 0.6840 - val_loss: 0.9378\n","# 세번째 모델(드롭아웃 + 데이터증강) : accuracy: 0.7553 - loss: 0.5091 - val_accuracy: 0.7450 - val_loss: 0.5082\n","import matplotlib.pyplot as plt\n","\n","plt.figure(figsize = (15, 5))\n","plt.plot(model_history2.history[\"accuracy\"], label = \"train_acc\")\n","plt.plot(model_history2.history[\"val_accuracy\"], label = \"val_acc\")\n","plt.legend()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"3kQ2CasO5M1b"},"source":["#### 배치 정규화 (BatchNormalization)\n","- Conv 층에서 파라미터 값(커널의 요소)들이 너무 큰 숫자값이라면, 학습에 있어서 의존성이 높아지기 때문에 성능이 저하되는 현상이 있을 수 있음\n","  - 정규화(평균이 0이고, 분산이 1이 되도록)를 수행\n","  - 일반적으로 숫자 값의 범위들이 작아지면 학습이 안정되고, 속도도 빠름!\n","  - relu를 사용할 경우 음수가 발생 → 음수의ㅏ 경우 다음 층으로 정보가 전달 되지 않음 → leaky relu 활용\n","---\n","- 확실하게 성능 향상됨!\n","- 되게 좋은데, \"왜\" 좋아지는지는 수학적으로 규명이 안 됨!"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":406,"status":"ok","timestamp":1725513204746,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"0wcLpr9m5Dvk","outputId":"479b2f59-ff02-4163-d439-8adce9317077"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/keras/src/layers/activations/leaky_relu.py:41: UserWarning: Argument `alpha` is deprecated. Use `negative_slope` instead.\n","  warnings.warn(\n"]}],"source":["from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Input, Flatten, Conv2D, MaxPool2D, Dropout\n","from tensorflow.keras.layers import BatchNormalization, LeakyReLU\n","from tensorflow.keras.regularizers import l2 # 규제\n","\n","# 뼈대\n","model4 = Sequential()\n","\n","\n","#입력\n","model4.add(Input(shape = (150,150, 3)))\n","\n","\n","#### 특징 추출부 시작 ####\n","model4.add(Conv2D(\n","    filters = 32, # 찾을 특징의 개수\n","    kernel_size = (3,3), # 커널(필터)의 크기\n","    padding = 'same', # 이미지 크기를 동일하게 하기 위해서, 가장 자리에 0을 채워둠\n","    strides = (2,2) # 보폭, 양 옆으로 2픽셀씩 + 위 아래로 2픽셀씩\n","))\n","\n","# conv -\u003e batch -\u003e activation -\u003e pool (정석적인 순서)\n","model4.add(BatchNormalization()) # 배치정규화, conv와 pool 사이 !!\n","model4.add(LeakyReLU(alpha = 0.01)) # 활성화 함수\n","# alpha = 0.01 : 음수 입력에 대한 기울기를 설정하는 값 -\u003e 음수인 경우 1%의 값만 사용\n","\n","model4.add(MaxPool2D(\n","    pool_size = (2, 2) # 풀링 윈도우 설정(최대값을 뽑기 위한 영역 크기)\n","    # 최댓값 -\u003e 가장 도드라지는 픽셀 1개, 크기는 보통 2*2\n","))\n","\n","## drop out 활용\n","model4.add(Dropout(0.3))\n","# 풀링층에서 나온 데이터를 처리할 때 무작위로 30%를 0으로 만든 후, 다음 층으로 넘기겠음.\n","\n","\n","model4.add(Conv2D(\n","    filters = 16, # 정답은 없음!\n","    kernel_size = (3,3),\n","    padding = \"same\",\n","    activation = \"relu\"\n","))\n","\n","model4.add(BatchNormalization()) # 배치정규화, conv와 pool 사이 !!\n","model4.add(LeakyReLU(alpha = 0.01)) # 활성화 함수\n","model4.add(MaxPool2D(\n","    pool_size = (2,2)\n","))\n","\n","#### 특징 추출부 끝 ####\n","\n","\n","model4.add(Flatten())\n","\n","##### 분류부 시작 #####\n","\n","model4.add(Dense(units = 64, kernel_regularizer = l2(0.01))) # 규제도 적용! (값이 높으면 높을수록, 가하는 규제 강도가 쎄지게 됨!!)\n","# Dense 층에도 추가 가능 ! -\u003e 더 빠른 연산속도를 위함\n","model4.add(BatchNormalization()) # 배치정규화, conv와 pool 사이 !!\n","model4.add(LeakyReLU(alpha = 0.01)) # 활성화 함수\n","\n","## drop out 또 활용\n","model4.add(Dropout(0.3))\n","model4.add(Dense(units = 32, activation=\"relu\"))\n","model4.add(BatchNormalization()) # 배치정규화, conv와 pool 사이 !!\n","model4.add(LeakyReLU(alpha = 0.01)) # 활성화 함수\n","\n","model4.add(Dense(units = 16, activation=\"relu\"))\n","\n","# 출력층\n","\n","model4.add(Dense(units = 1, activation = \"sigmoid\"))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7QFozM4y_lYD"},"outputs":[],"source":["from tensorflow.keras.optimizers import Adam\n","\n","# 학습 방법 설정\n","model4.compile(\n","    loss = \"binary_crossentropy\",\n","    optimizer = Adam(learning_rate = 0.002),\n","    # 학습률을 더 크게 조정 -\u003e 배치정규화 수행 시 학습률을 좀 더 높게 설정하면 효율적으로 학습을 수행할 수 있음\n","    metrics = [\"accuracy\"]\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"executionInfo":{"elapsed":1228815,"status":"ok","timestamp":1725437394372,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"YbGd3oop_lYD","outputId":"dd4f4818-b942-4a65-c7a2-ba8530db765e"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 287ms/step - accuracy: 0.5357 - loss: 1.2742 - val_accuracy: 0.5000 - val_loss: 1.1189\n","Epoch 2/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 268ms/step - accuracy: 0.5911 - loss: 0.9652 - val_accuracy: 0.5000 - val_loss: 1.1527\n","Epoch 3/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m24s\u001b[0m 283ms/step - accuracy: 0.6027 - loss: 0.9221 - val_accuracy: 0.5180 - val_loss: 0.9409\n","Epoch 4/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 275ms/step - accuracy: 0.6283 - loss: 0.8968 - val_accuracy: 0.6030 - val_loss: 0.9565\n","Epoch 5/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 265ms/step - accuracy: 0.6106 - loss: 0.9158 - val_accuracy: 0.5820 - val_loss: 0.9232\n","Epoch 6/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m24s\u001b[0m 285ms/step - accuracy: 0.6363 - loss: 0.9069 - val_accuracy: 0.5720 - val_loss: 0.9492\n","Epoch 7/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 292ms/step - accuracy: 0.6270 - loss: 0.9081 - val_accuracy: 0.5190 - val_loss: 1.0258\n","Epoch 8/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 271ms/step - accuracy: 0.6423 - loss: 0.8901 - val_accuracy: 0.5610 - val_loss: 1.7123\n","Epoch 9/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 275ms/step - accuracy: 0.6616 - loss: 0.8710 - val_accuracy: 0.6640 - val_loss: 0.8868\n","Epoch 10/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m24s\u001b[0m 277ms/step - accuracy: 0.6629 - loss: 0.8879 - val_accuracy: 0.6790 - val_loss: 0.9123\n","Epoch 11/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m40s\u001b[0m 268ms/step - accuracy: 0.6623 - loss: 0.9222 - val_accuracy: 0.6960 - val_loss: 0.8364\n","Epoch 12/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 261ms/step - accuracy: 0.7018 - loss: 0.8292 - val_accuracy: 0.6680 - val_loss: 0.9522\n","Epoch 13/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 276ms/step - accuracy: 0.7165 - loss: 0.8613 - val_accuracy: 0.6840 - val_loss: 0.8750\n","Epoch 14/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 267ms/step - accuracy: 0.6882 - loss: 0.8786 - val_accuracy: 0.6600 - val_loss: 1.0442\n","Epoch 15/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 296ms/step - accuracy: 0.7175 - loss: 0.8499 - val_accuracy: 0.6420 - val_loss: 0.9010\n","Epoch 16/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 266ms/step - accuracy: 0.7221 - loss: 0.8225 - val_accuracy: 0.5460 - val_loss: 0.9942\n","Epoch 17/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 278ms/step - accuracy: 0.6911 - loss: 0.8670 - val_accuracy: 0.6050 - val_loss: 0.8967\n","Epoch 18/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m24s\u001b[0m 278ms/step - accuracy: 0.7169 - loss: 0.8244 - val_accuracy: 0.7180 - val_loss: 0.8998\n","Epoch 19/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 266ms/step - accuracy: 0.7101 - loss: 0.8680 - val_accuracy: 0.6930 - val_loss: 0.8294\n","Epoch 20/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m40s\u001b[0m 264ms/step - accuracy: 0.7045 - loss: 0.8311 - val_accuracy: 0.6930 - val_loss: 0.8385\n","Epoch 21/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m24s\u001b[0m 277ms/step - accuracy: 0.7151 - loss: 0.8225 - val_accuracy: 0.6920 - val_loss: 0.8299\n","Epoch 22/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 287ms/step - accuracy: 0.7087 - loss: 0.8027 - val_accuracy: 0.6660 - val_loss: 1.0466\n","Epoch 23/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 285ms/step - accuracy: 0.7298 - loss: 0.8236 - val_accuracy: 0.6560 - val_loss: 0.9160\n","Epoch 24/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m39s\u001b[0m 265ms/step - accuracy: 0.7307 - loss: 0.8026 - val_accuracy: 0.5680 - val_loss: 0.9628\n","Epoch 25/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 279ms/step - accuracy: 0.7320 - loss: 0.8141 - val_accuracy: 0.7280 - val_loss: 0.7923\n","Epoch 26/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 274ms/step - accuracy: 0.7401 - loss: 0.7712 - val_accuracy: 0.6110 - val_loss: 0.8955\n","Epoch 27/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 262ms/step - accuracy: 0.7413 - loss: 0.7828 - val_accuracy: 0.6200 - val_loss: 0.9242\n","Epoch 28/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 277ms/step - accuracy: 0.7416 - loss: 0.7857 - val_accuracy: 0.7580 - val_loss: 0.7740\n","Epoch 29/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 279ms/step - accuracy: 0.7530 - loss: 0.7832 - val_accuracy: 0.7200 - val_loss: 0.8054\n","Epoch 30/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 276ms/step - accuracy: 0.7245 - loss: 0.7908 - val_accuracy: 0.7300 - val_loss: 0.7889\n","Epoch 31/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 275ms/step - accuracy: 0.7440 - loss: 0.7517 - val_accuracy: 0.6320 - val_loss: 0.8861\n","Epoch 32/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 267ms/step - accuracy: 0.7453 - loss: 0.7736 - val_accuracy: 0.7100 - val_loss: 0.7950\n","Epoch 33/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 265ms/step - accuracy: 0.7216 - loss: 0.7875 - val_accuracy: 0.6130 - val_loss: 1.2271\n","Epoch 34/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 274ms/step - accuracy: 0.7308 - loss: 0.8240 - val_accuracy: 0.5720 - val_loss: 1.3602\n","Epoch 35/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 273ms/step - accuracy: 0.7457 - loss: 0.7610 - val_accuracy: 0.6410 - val_loss: 0.8991\n","Epoch 36/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 273ms/step - accuracy: 0.7371 - loss: 0.7937 - val_accuracy: 0.7320 - val_loss: 0.7951\n","Epoch 37/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 260ms/step - accuracy: 0.7460 - loss: 0.7485 - val_accuracy: 0.7440 - val_loss: 0.7617\n","Epoch 38/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 295ms/step - accuracy: 0.7617 - loss: 0.7466 - val_accuracy: 0.6970 - val_loss: 0.7952\n","Epoch 39/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m24s\u001b[0m 280ms/step - accuracy: 0.7639 - loss: 0.7352 - val_accuracy: 0.6840 - val_loss: 0.8400\n","Epoch 40/40\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m24s\u001b[0m 282ms/step - accuracy: 0.7124 - loss: 0.8046 - val_accuracy: 0.6820 - val_loss: 0.7734\n"]}],"source":["# 학습\n","model_history3 = model4.fit(\n","    train_aug_generator, # 증강 제너레이터 적용!\n","    epochs = 40, # 증강( 변형) 이라서 더 많은 이미지들을 보여주기 위해 에포크 증가\n","    validation_data = val_generator\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":405},"executionInfo":{"elapsed":939,"status":"ok","timestamp":1725438180200,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"LXu8WQU2_4mP","outputId":"e9191b99-861d-4410-eb64-ba1e3bb89ce6"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 1500x500 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# 첫번째 모델(드롭아웃 적용 시키기 전) : accuracy: 0.9949 - loss: 0.0188 - val_accuracy: 0.6970 - val_loss: 1.3552\n","# 두번째 모델(드롭아웃 적용 이후) : accuracy: 0.9230 - loss: 0.1868 - val_accuracy: 0.6840 - val_loss: 0.9378\n","# 세번째 모델(드롭아웃 + 데이터증강) : accuracy: 0.7553 - loss: 0.5091 - val_accuracy: 0.7450 - val_loss: 0.5082\n","# 네번째 모델\n","import matplotlib.pyplot as plt\n","\n","plt.figure(figsize = (15, 5))\n","plt.plot(model_history3.history[\"accuracy\"], label = \"train_acc\")\n","plt.plot(model_history3.history[\"val_accuracy\"], label = \"val_acc\")\n","plt.legend()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"KB9Zge6B_cLs"},"source":["```python\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Input, Flatten, Conv2D, MaxPool2D, Dropout\n","from tensorflow.keras.layers import BatchNormalization, LeakyReLU\n","from tensorflow.keras.regularizers import l2 # 규제\n","\n","# 뼈대\n","model4 = Sequential()\n","\n","# 입력\n","model4.add(Input(shape = (150, 150, 3))) # 150*150, 3개의 색상 채널\n","\n","##### 특징 추출부 시작 #####\n","model4.add(Conv2D(\n","    filters = 32, # 찾을 특징의 개수\n","    kernel_size = (3, 3), # 커널(필터)의 크기\n","    padding = 'same', # 이미지 크기를 동일하게 하기 위해서, 가장 자리에 0을 채워둠\n","    strides = (2, 2) # 보폭, 양 옆으로 2픽셀씩 + 위 아래로 2픽셀씩\n","))\n","# conv -\u003e batch -\u003e activation -\u003e pool\n","model4.add(BatchNormalization()) # 배치정규화, conv와 pool 사이!!\n","model4.add(LeakyReLU(alpha = 0.01)) # 활성화 함수\n","# alpha = 0.01 : 음수 입력에 대한 기울기를 설정하는 값 -\u003e 음수인 경우 1%의 값만 사용\n","\n","model4.add(MaxPool2D(\n","    pool_size = (2, 2) # 풀링 윈도우 설정(최대값을 뽑기 위한 영역 크기)\n","    # 최댓값 -\u003e 가장 도드라지는 픽셀 1개, 크기는 보통 2*2\n","))\n","\n","model4.add(Dropout(0.3)) # Dropout 활용, 30%를 무작위로 0으로 만든 후 다음 층으로 넘기겠다!\n","\n","model4.add(Conv2D(\n","    filters = 16, # 정답은 없음!\n","    kernel_size = (3, 3),\n","    padding = \"same\",\n","    activation = \"relu\"\n","))\n","model4.add(BatchNormalization()) # 배치정규화, conv와 pool 사이!!\n","model4.add(LeakyReLU(alpha = 0.01)) # 활성화 함수\n","model4.add(MaxPool2D(\n","    pool_size = (2,2)\n","))\n","##### 특징 추출부 끝 #####\n","\n","model4.add(Flatten()) # 다차원의 층을 1차원으로 변환\n","\n","##### 분류부 시작 #####\n","model4.add(Dense(units = 64, kernel_regularizer = l2(0.01))) # 규제도 적용! (갚이 높으면 높을 수록, 가하는 규제 강도가 쎄지게 됨!!)\n","# Dense층에도 추가 가능! -\u003e 더 빠른 연산속도를 위함\n","model4.add(BatchNormalization()) # 배치정규화, conv와 pool 사이!!\n","model4.add(LeakyReLU(alpha = 0.01)) # 활성화 함수\n","model4.add(Dropout(0.3)) # Dropout 활용\n","\n","model4.add(Dense(units = 32, activation = \"relu\"))\n","model4.add(BatchNormalization()) # 배치정규화, conv와 pool 사이!!\n","model4.add(LeakyReLU(alpha = 0.01)) # 활성화 함수\n","\n","model4.add(Dense(units = 16, activation = \"relu\"))\n","\n","# 출력층\n","model4.add(Dense(units = 1, activation = \"sigmoid\"))\n","```"]},{"cell_type":"markdown","metadata":{"id":"acY-Axi-pLkB"},"source":["### 전이학습(Transfer learning) : 기존에 잘 만들어진 모델 가져와 학습\n","- 사전 학습 모델을 가져와서, 새로운 데이터로 일부 계층을 새로 학습하는 방법\n","- Fine tunning(미세 조정) : 일부 계층(또느 전체 모델)을 추가로 미세하게 학습"]},{"cell_type":"code","execution_count":13,"metadata":{"executionInfo":{"elapsed":539,"status":"ok","timestamp":1725519211150,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"_6ZXd09l_ew8"},"outputs":[],"source":["from tensorflow.keras.applications import VGG16 # 사전 학습 모델"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3967,"status":"ok","timestamp":1725519217499,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"qfW0563RriXA","outputId":"589696ba-c81b-400d-d00b-7182fd2ad792"},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/vgg16/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5\n","\u001b[1m58889256/58889256\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 0us/step\n"]}],"source":["conv_base = VGG16(\n","    weights = 'imagenet',  # weights = 가중치 / 'imagenet(수천가지 데이터를 학습시킨 카테고리?)에서 학습되어있는 가중치를 가져오겠다.'\n","    include_top = False,   # 분류부 사용 여부 \u003e\u003e false = 특징 추출부만 사용하겠다는 의미\n","    input_shape = (150,150,3) # 이미지 크기 조정 ( 150x150 / 3차원 )\n",")"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":737},"collapsed":true,"executionInfo":{"elapsed":553,"status":"ok","timestamp":1725519223623,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"FcD16Mz5tLkK","outputId":"2779b541-420c-40b6-fd35-d6991d615f85"},"outputs":[{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003eModel: \"vgg16\"\u003c/span\u003e\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1mModel: \"vgg16\"\u001b[0m\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u003cspan style=\"font-weight: bold\"\u003e Layer (type)                         \u003c/span\u003e┃\u003cspan style=\"font-weight: bold\"\u003e Output Shape                \u003c/span\u003e┃\u003cspan style=\"font-weight: bold\"\u003e         Param # \u003c/span\u003e┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ input_layer (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eInputLayer\u003c/span\u003e)             │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e3\u003c/span\u003e)         │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e64\u003c/span\u003e)        │           \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e1,792\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e64\u003c/span\u003e)        │          \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e36,928\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e64\u003c/span\u003e)          │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e128\u003c/span\u003e)         │          \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e73,856\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e128\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e147,584\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e128\u003c/span\u003e)         │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e295,168\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e590,080\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv3 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e590,080\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)         │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e1,180,160\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)         │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv3 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)         │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv3 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e4\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e4\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","\u003c/pre\u003e\n"],"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ input_layer (\u001b[38;5;33mInputLayer\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m3\u001b[0m)         │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m64\u001b[0m)        │           \u001b[38;5;34m1,792\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m64\u001b[0m)        │          \u001b[38;5;34m36,928\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m64\u001b[0m)          │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m128\u001b[0m)         │          \u001b[38;5;34m73,856\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m128\u001b[0m)         │         \u001b[38;5;34m147,584\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m128\u001b[0m)         │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │         \u001b[38;5;34m295,168\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │         \u001b[38;5;34m590,080\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv3 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │         \u001b[38;5;34m590,080\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m512\u001b[0m)         │       \u001b[38;5;34m1,180,160\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m512\u001b[0m)         │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv3 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m512\u001b[0m)         │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv3 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m4\u001b[0m, \u001b[38;5;34m4\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │               \u001b[38;5;34m0\u001b[0m │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Total params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e14,714,688\u003c/span\u003e (56.13 MB)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m14,714,688\u001b[0m (56.13 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Trainable params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e14,714,688\u003c/span\u003e (56.13 MB)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m14,714,688\u001b[0m (56.13 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Non-trainable params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e (0.00 B)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"]},"metadata":{},"output_type":"display_data"}],"source":["conv_base.summary()\n","\n","# Param :: 학습해야 할 파라미터값 (조정되어 있음)\n","# 특징추출부만 가져오겠다 선언했으므로 Dense층은 없음\n","\n","# Total params: 14,714,688 (56.13 MB)\n","# Trainable params: 14,714,688 (56.13 MB)\n","# Non-trainable params: 0 (0.00 B)\n","# ▲ 제일 중요!!!!\n","# total params : 총 파라미터\n","# Trainable params 학습 가능한 파라미터 개수\n","# Non-trainable params 학습할 때 파라미터가 이루어지지 않는 개수?"]},{"cell_type":"code","execution_count":16,"metadata":{"executionInfo":{"elapsed":545,"status":"ok","timestamp":1725519230015,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"w8O603optVOd"},"outputs":[],"source":["# 전이학습 시 주의점 : 전체 층은 얼려두고 학습 수행해야 함\n","conv_base.trainable = False  # 전체 층 동결!!"]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":2,"status":"ok","timestamp":1725519231745,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"dW3WL_tFt73G"},"outputs":[],"source":["# 사전 학습된 모델을 갖고 설계!\n","\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Input, Flatten, Conv2D, MaxPool2D, Dropout\n","from tensorflow.keras.layers import BatchNormalization, LeakyReLU\n","from tensorflow.keras.regularizers import l2 # 규제\n","\n","# 뼈대\n","transfer_model = Sequential()\n","\n","transfer_model.add(conv_base)  # VGG16으로 모델의 특징 추출부로 세팅 (단, 지금은 학습이 수행되지 않게끔 동결해놓은 상태)\n","\n","transfer_model.add(Flatten())  # Dense 층에 들어가도록 다차원 데이터를 일차원으로 바꿈\n","transfer_model.add(Dense(64, activation = \"relu\"))\n","transfer_model.add(Dense(32, activation = \"relu\"))\n","transfer_model.add(Dense(12, activation = \"relu\"))\n","\n","transfer_model.add(Dense(1, activation = \"sigmoid\"))\n"]},{"cell_type":"code","execution_count":18,"metadata":{"executionInfo":{"elapsed":658,"status":"ok","timestamp":1725519234674,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"S2R_fpVDt-Cb"},"outputs":[],"source":["transfer_model.compile(\n","    loss = \"binary_crossentropy\",\n","    metrics = [\"accuracy\"],\n","    optimizer = \"adam\"\n",")"]},{"cell_type":"code","execution_count":19,"metadata":{"executionInfo":{"elapsed":6,"status":"ok","timestamp":1725519237112,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"t0ca9oqYx-lP"},"outputs":[],"source":["# 데이터 증강 기법 적용\n","aug_generator = ImageDataGenerator(\n","    rescale = 1. / 255, # 0~1 사이의 픽셀값 조정(스케일링)\n","    rotation_range = 20, # -20 ~ 20도 사이에서 무작위로 회전\n","    width_shift_range = 0.1, # 10%, 전체 너비의 10%만큼 좌우로 무작위로 이동\n","    height_shift_range = 0.1, # 10%, 전체 높이의 10%만큼 상하로 무작위로 이동\n","    shear_range = 0.1, # 시계반대방향으로 지정된 각도(0.1)만큼 변형\n","    zoom_range = 0.1, # 0.9 ~ 1.1배 사이로 무작위로 확대하거나 축소\n","    horizontal_flip = True, # 수평방향으로 뒤집을지 여부\n","    fill_mode = \"nearest\" # 가까운 값으로 채우겠다!\n",")\n"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4973,"status":"ok","timestamp":1725519243869,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"bv0k1WLwyCGG","outputId":"a4fe12a0-229f-4eeb-8b3d-1acff39a3c24"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 2000 images belonging to 2 classes.\n"]}],"source":["train_aug_generator = aug_generator.flow_from_directory(\n","    train_dir,\n","    target_size = (150, 150),\n","    batch_size = 25,\n","    class_mode = \"binary\"\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1333706,"status":"ok","timestamp":1725517588002,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"SS9Patf4u4S5","outputId":"0bf317df-9e0b-4748-b676-2b1efdefe6a6"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/20\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m675s\u001b[0m 8s/step - accuracy: 0.6977 - loss: 0.5555 - val_accuracy: 0.8970 - val_loss: 0.2843\n","Epoch 2/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 320ms/step - accuracy: 0.8429 - loss: 0.3621 - val_accuracy: 0.9010 - val_loss: 0.2498\n","Epoch 3/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m40s\u001b[0m 300ms/step - accuracy: 0.8648 - loss: 0.2978 - val_accuracy: 0.8780 - val_loss: 0.2998\n","Epoch 4/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 294ms/step - accuracy: 0.8940 - loss: 0.2681 - val_accuracy: 0.8420 - val_loss: 0.3602\n","Epoch 5/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 305ms/step - accuracy: 0.8900 - loss: 0.2511 - val_accuracy: 0.9110 - val_loss: 0.2302\n","Epoch 6/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 298ms/step - accuracy: 0.9144 - loss: 0.2206 - val_accuracy: 0.9010 - val_loss: 0.2442\n","Epoch 7/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 297ms/step - accuracy: 0.9049 - loss: 0.2334 - val_accuracy: 0.8540 - val_loss: 0.3774\n","Epoch 8/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 300ms/step - accuracy: 0.9015 - loss: 0.2411 - val_accuracy: 0.8980 - val_loss: 0.2724\n","Epoch 9/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 313ms/step - accuracy: 0.9146 - loss: 0.2060 - val_accuracy: 0.9030 - val_loss: 0.2575\n","Epoch 10/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 301ms/step - accuracy: 0.9294 - loss: 0.1798 - val_accuracy: 0.8620 - val_loss: 0.3642\n","Epoch 11/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 287ms/step - accuracy: 0.9168 - loss: 0.2039 - val_accuracy: 0.9090 - val_loss: 0.2429\n","Epoch 12/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 295ms/step - accuracy: 0.9316 - loss: 0.1701 - val_accuracy: 0.9020 - val_loss: 0.2554\n","Epoch 13/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 302ms/step - accuracy: 0.9398 - loss: 0.1708 - val_accuracy: 0.9020 - val_loss: 0.2707\n","Epoch 14/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 292ms/step - accuracy: 0.9411 - loss: 0.1495 - val_accuracy: 0.8990 - val_loss: 0.2365\n","Epoch 15/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 320ms/step - accuracy: 0.9314 - loss: 0.1668 - val_accuracy: 0.8930 - val_loss: 0.2656\n","Epoch 16/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m39s\u001b[0m 300ms/step - accuracy: 0.9308 - loss: 0.1613 - val_accuracy: 0.9070 - val_loss: 0.2531\n","Epoch 17/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m48s\u001b[0m 387ms/step - accuracy: 0.9417 - loss: 0.1471 - val_accuracy: 0.8930 - val_loss: 0.2833\n","Epoch 18/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 338ms/step - accuracy: 0.9464 - loss: 0.1350 - val_accuracy: 0.9080 - val_loss: 0.2647\n","Epoch 19/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m37s\u001b[0m 303ms/step - accuracy: 0.9437 - loss: 0.1259 - val_accuracy: 0.9050 - val_loss: 0.2746\n","Epoch 20/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 321ms/step - accuracy: 0.9363 - loss: 0.1541 - val_accuracy: 0.8930 - val_loss: 0.3094\n"]}],"source":["transfer_model_his = transfer_model.fit(\n","    train_aug_generator,\n","    epochs = 20,\n","    validation_data = val_generator)"]},{"cell_type":"markdown","metadata":{"id":"L_X48ftP2bUI"},"source":["### 전이학습, 미세조정\n","- 미세조정 : 전이학습 후에, 전체 모델 또는 일부 계층을 추가로 학습\n","\n","1. 사전학습 된 특성추출부 하단에 분류부를 추가\n","2. 사전학습 된 특성추출부 Freeze (잘 학습 된 파라미터 값들이 손실되지 않게끔)\n","3. 새로운 분류부 학습\n","---\n","4. 사전 학습 된 특성 추출부 중 학습시킬 일부 계층의 Freeze 풀기\n","5. 고정을 푼 상태에서 **작은 학습률**로 Training\n"]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1725519243870,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"iqm_jnakyGf_","outputId":"713399dd-0b03-4dfe-fbc5-5b14e9b8e2ba"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'block3_pool'"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["# 각 층의 이름 접근\n","conv_base.layers[10].name"]},{"cell_type":"code","execution_count":22,"metadata":{"executionInfo":{"elapsed":684,"status":"ok","timestamp":1725519247418,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"0puMm8EM617D"},"outputs":[],"source":["# 전체 동결 해제 -\u003e 전체 동결되어 있는 경우, 개별 요소 동결이 수행되지 않음 !!\n","conv_base.trainable = True"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":737},"collapsed":true,"executionInfo":{"elapsed":582,"status":"ok","timestamp":1725519249662,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"QpOaAFhd65xi","outputId":"8b2356e1-faec-4980-ed9d-9f42c7f54119"},"outputs":[{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003eModel: \"vgg16\"\u003c/span\u003e\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1mModel: \"vgg16\"\u001b[0m\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u003cspan style=\"font-weight: bold\"\u003e Layer (type)                         \u003c/span\u003e┃\u003cspan style=\"font-weight: bold\"\u003e Output Shape                \u003c/span\u003e┃\u003cspan style=\"font-weight: bold\"\u003e         Param # \u003c/span\u003e┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ input_layer (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eInputLayer\u003c/span\u003e)             │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e3\u003c/span\u003e)         │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e64\u003c/span\u003e)        │           \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e1,792\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e64\u003c/span\u003e)        │          \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e36,928\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e64\u003c/span\u003e)          │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e128\u003c/span\u003e)         │          \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e73,856\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e128\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e147,584\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e128\u003c/span\u003e)         │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e295,168\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e590,080\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv3 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e590,080\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)         │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e1,180,160\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)         │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv3 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)         │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv3 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e4\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e4\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","\u003c/pre\u003e\n"],"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ input_layer (\u001b[38;5;33mInputLayer\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m3\u001b[0m)         │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m64\u001b[0m)        │           \u001b[38;5;34m1,792\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m64\u001b[0m)        │          \u001b[38;5;34m36,928\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m64\u001b[0m)          │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m128\u001b[0m)         │          \u001b[38;5;34m73,856\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m128\u001b[0m)         │         \u001b[38;5;34m147,584\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m128\u001b[0m)         │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │         \u001b[38;5;34m295,168\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │         \u001b[38;5;34m590,080\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv3 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │         \u001b[38;5;34m590,080\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m512\u001b[0m)         │       \u001b[38;5;34m1,180,160\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m512\u001b[0m)         │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv3 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m512\u001b[0m)         │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv3 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m4\u001b[0m, \u001b[38;5;34m4\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │               \u001b[38;5;34m0\u001b[0m │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Total params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e14,714,688\u003c/span\u003e (56.13 MB)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m14,714,688\u001b[0m (56.13 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Trainable params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e14,714,688\u003c/span\u003e (56.13 MB)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m14,714,688\u001b[0m (56.13 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Non-trainable params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e (0.00 B)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"]},"metadata":{},"output_type":"display_data"}],"source":["conv_base.summary()"]},{"cell_type":"code","execution_count":24,"metadata":{"executionInfo":{"elapsed":544,"status":"ok","timestamp":1725519253384,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"425VjoMy4YbK"},"outputs":[],"source":["# 미세조정 방식\n","for layer in conv_base.layers :\n","  if layer.name == \"block5_conv3\":\n","    layer.trainable = True\n","  else :\n","    layer.trainable = False"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":737},"collapsed":true,"executionInfo":{"elapsed":8,"status":"ok","timestamp":1725519253944,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"vpkj06j54YkC","outputId":"2202ba48-6a21-4ac5-aad3-36c7e087704b"},"outputs":[{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003eModel: \"vgg16\"\u003c/span\u003e\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1mModel: \"vgg16\"\u001b[0m\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u003cspan style=\"font-weight: bold\"\u003e Layer (type)                         \u003c/span\u003e┃\u003cspan style=\"font-weight: bold\"\u003e Output Shape                \u003c/span\u003e┃\u003cspan style=\"font-weight: bold\"\u003e         Param # \u003c/span\u003e┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ input_layer (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eInputLayer\u003c/span\u003e)             │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e3\u003c/span\u003e)         │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e64\u003c/span\u003e)        │           \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e1,792\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e150\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e64\u003c/span\u003e)        │          \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e36,928\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e64\u003c/span\u003e)          │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e128\u003c/span\u003e)         │          \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e73,856\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e75\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e128\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e147,584\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e128\u003c/span\u003e)         │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e295,168\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e590,080\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv3 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e37\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │         \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e590,080\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e256\u003c/span\u003e)         │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)         │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e1,180,160\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)         │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv3 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e18\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)         │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv1 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv2 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv3 (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eConv2D\u003c/span\u003e)                │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e9\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │       \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_pool (\u003cspan style=\"color: #0087ff; text-decoration-color: #0087ff\"\u003eMaxPooling2D\u003c/span\u003e)           │ (\u003cspan style=\"color: #00d7ff; text-decoration-color: #00d7ff\"\u003eNone\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e4\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e4\u003c/span\u003e, \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e512\u003c/span\u003e)           │               \u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e0\u003c/span\u003e │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","\u003c/pre\u003e\n"],"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ input_layer (\u001b[38;5;33mInputLayer\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m3\u001b[0m)         │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m64\u001b[0m)        │           \u001b[38;5;34m1,792\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m64\u001b[0m)        │          \u001b[38;5;34m36,928\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block1_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m64\u001b[0m)          │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m128\u001b[0m)         │          \u001b[38;5;34m73,856\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m75\u001b[0m, \u001b[38;5;34m128\u001b[0m)         │         \u001b[38;5;34m147,584\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block2_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m128\u001b[0m)         │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │         \u001b[38;5;34m295,168\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │         \u001b[38;5;34m590,080\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_conv3 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │         \u001b[38;5;34m590,080\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block3_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m256\u001b[0m)         │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m512\u001b[0m)         │       \u001b[38;5;34m1,180,160\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m512\u001b[0m)         │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_conv3 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m512\u001b[0m)         │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block4_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv1 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv2 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_conv3 (\u001b[38;5;33mConv2D\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │       \u001b[38;5;34m2,359,808\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ block5_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m4\u001b[0m, \u001b[38;5;34m4\u001b[0m, \u001b[38;5;34m512\u001b[0m)           │               \u001b[38;5;34m0\u001b[0m │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Total params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e14,714,688\u003c/span\u003e (56.13 MB)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m14,714,688\u001b[0m (56.13 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Trainable params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e2,359,808\u003c/span\u003e (9.00 MB)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m2,359,808\u001b[0m (9.00 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003cpre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"\u003e\u003cspan style=\"font-weight: bold\"\u003e Non-trainable params: \u003c/span\u003e\u003cspan style=\"color: #00af00; text-decoration-color: #00af00\"\u003e12,354,880\u003c/span\u003e (47.13 MB)\n","\u003c/pre\u003e\n"],"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m12,354,880\u001b[0m (47.13 MB)\n"]},"metadata":{},"output_type":"display_data"}],"source":["conv_base.summary()"]},{"cell_type":"code","execution_count":26,"metadata":{"executionInfo":{"elapsed":553,"status":"ok","timestamp":1725519258464,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"f7KDug954Yx-"},"outputs":[],"source":["transfer_model2 = Sequential()\n","\n","transfer_model2.add(conv_base) # 마지막 층의 동결이 해제된 상황\n","\n","transfer_model2.add(Flatten())\n","transfer_model2.add(Dense(64, activation = \"relu\"))\n","transfer_model2.add(Dense(32, activation = \"relu\"))\n","transfer_model2.add(Dense(16, activation = \"relu\"))\n","\n","transfer_model2.add(Dense(1, activation = \"sigmoid\"))"]},{"cell_type":"code","execution_count":27,"metadata":{"executionInfo":{"elapsed":583,"status":"ok","timestamp":1725519260729,"user":{"displayName":"고조늬","userId":"11440413501217383034"},"user_tz":-540},"id":"uqd9dQvA4ZQl"},"outputs":[],"source":["from keras.optimizers import Adam\n","\n","transfer_model2.compile(\n","    loss = \"binary_crossentropy\",\n","    metrics = [\"accuracy\"],\n","    optimizer = Adam(learning_rate = 0.0001) # 기본값 : 0.0001 -\u003e 10배 가량의 학습률로 조정\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"69HlcFuB4ZU5"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/20\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1373s\u001b[0m 16s/step - accuracy: 0.6698 - loss: 0.5675 - val_accuracy: 0.8840 - val_loss: 0.2546\n","Epoch 2/20\n","\u001b[1m80/80\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m826s\u001b[0m 10s/step - accuracy: 0.8888 - loss: 0.2608 - val_accuracy: 0.9070 - val_loss: 0.2237\n","Epoch 3/20\n","\u001b[1m29/80\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m5:36\u001b[0m 7s/step - accuracy: 0.9116 - loss: 0.1894"]},{"ename":"KeyboardInterrupt","evalue":"","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-30-093dd0c8b6bc\u003e\u001b[0m in \u001b[0;36m\u003ccell line: 1\u003e\u001b[0;34m()\u001b[0m\n\u001b[0;32m----\u003e 1\u001b[0;31m \u001b[0mtransfer_model2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_aug_generator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m20\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mval_generator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    115\u001b[0m         \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    116\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 117\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    118\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    119\u001b[0m             \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/backend/tensorflow/trainer.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq)\u001b[0m\n\u001b[1;32m    316\u001b[0m                 \u001b[0;32mfor\u001b[0m \u001b[0mstep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0miterator\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mepoch_iterator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menumerate_epoch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    317\u001b[0m                     \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 318\u001b[0;31m                     \u001b[0mlogs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    319\u001b[0m                     \u001b[0mlogs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_pythonify_logs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    320\u001b[0m                     \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_end\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    831\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    832\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 833\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    834\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    835\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    876\u001b[0m       \u001b[0;31m# In this case we have not created variables on the first call. So we can\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    877\u001b[0m       \u001b[0;31m# run the first trace but we should fail if variables are created.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 878\u001b[0;31m       results = tracing_compilation.call_function(\n\u001b[0m\u001b[1;32m    879\u001b[0m           \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_variable_creation_config\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    880\u001b[0m       )\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/tracing_compilation.py\u001b[0m in \u001b[0;36mcall_function\u001b[0;34m(args, kwargs, tracing_options)\u001b[0m\n\u001b[1;32m    137\u001b[0m   \u001b[0mbound_args\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunction\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunction_type\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    138\u001b[0m   \u001b[0mflat_inputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunction\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunction_type\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munpack_inputs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbound_args\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 139\u001b[0;31m   return function._call_flat(  # pylint: disable=protected-access\n\u001b[0m\u001b[1;32m    140\u001b[0m       \u001b[0mflat_inputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcaptured_inputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfunction\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcaptured_inputs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    141\u001b[0m   )\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/concrete_function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, tensor_inputs, captured_inputs)\u001b[0m\n\u001b[1;32m   1320\u001b[0m         and executing_eagerly):\n\u001b[1;32m   1321\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1322\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_inference_function\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcall_preflattened\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1323\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1324\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/atomic_function.py\u001b[0m in \u001b[0;36mcall_preflattened\u001b[0;34m(self, args)\u001b[0m\n\u001b[1;32m    214\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0mcall_preflattened\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mSequence\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTensor\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m-\u003e\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;34m\"\"\"Calls with flattened tensor inputs and returns the structured output.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 216\u001b[0;31m     \u001b[0mflat_outputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcall_flat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    217\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunction_type\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpack_output\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflat_outputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    218\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/atomic_function.py\u001b[0m in \u001b[0;36mcall_flat\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m    249\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mrecord\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstop_recording\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    250\u001b[0m           \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_bound_context\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecuting_eagerly\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 251\u001b[0;31m             outputs = self._bound_context.call_function(\n\u001b[0m\u001b[1;32m    252\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    253\u001b[0m                 \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/context.py\u001b[0m in \u001b[0;36mcall_function\u001b[0;34m(self, name, tensor_inputs, num_outputs)\u001b[0m\n\u001b[1;32m   1550\u001b[0m     \u001b[0mcancellation_context\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcancellation\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1551\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcancellation_context\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1552\u001b[0;31m       outputs = execute.execute(\n\u001b[0m\u001b[1;32m   1553\u001b[0m           \u001b[0mname\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"utf-8\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1554\u001b[0m           \u001b[0mnum_outputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnum_outputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     51\u001b[0m   \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     52\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 53\u001b[0;31m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0m\u001b[1;32m     54\u001b[0m                                         inputs, attrs, num_outputs)\n\u001b[1;32m     55\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["transfer_model2.fit(train_aug_generator, epochs = 20, validation_data = val_generator)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_imdqmVc4ZYl"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"faM4WNc24ZcD"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ni_6MKAS4Zfw"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xNCs1LQX4SNU"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lFIA9wUi4SJJ"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HBoZuJg24R9s"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YTD6kZ-h4HY9"},"outputs":[],"source":[]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyMRy3G2Xw+2gcdop3W+pPEF","gpuType":"T4","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}